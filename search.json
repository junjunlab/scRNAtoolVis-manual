[{"path":"index.html","id":"about-lao-junjun","chapter":"1 About Lao Junjun","heading":"1 About Lao Junjun","text":"interested works, welcome browse github: https://github.com/junjunlab.","code":""},{"path":"intro.html","id":"intro","chapter":"2 Introduction","heading":"2 Introduction","text":"scRNAtoolVis package mainly used visualize scRNA-seq related figures produce elegant plots.","code":""},{"path":"intro.html","id":"installation","chapter":"2 Introduction","heading":"2.1 Installation","text":"can install development version scRNAtoolVis like :","code":"\n# install.packages(\"devtools\")\ndevtools::install_github(\"junjunlab/scRNAtoolVis\")"},{"path":"clustercorneraxes.html","id":"clustercorneraxes","chapter":"3 clusterCornerAxes","heading":"3 clusterCornerAxes","text":"clusterCornerAxes used add corner axis left-bottom UMAP/tSNE principle component plot.","code":""},{"path":"clustercorneraxes.html","id":"load-test-data","chapter":"3 clusterCornerAxes","heading":"3.1 load test data","text":"load test data scRNAtoolVis package:","code":"\nlibrary(scRNAtoolVis)\n\n# load test data\ntest <- system.file(\"extdata\", \"seuratTest.RDS\", package = \"scRNAtoolVis\")\ntmp <- readRDS(test)"},{"path":"clustercorneraxes.html","id":"examples","chapter":"3 clusterCornerAxes","heading":"3.2 examples","text":"default plot:can change arrow type:can facet seurat metadata column catogary variable:multiple corner axises confuse , can also set axes = ‘one’ retain one axis left:Change axis label color:Use tSNE reduction data:Change cool theme:can set keySize change legend size:","code":"\n# umap\nclusterCornerAxes(object = tmp,reduction = 'umap',\n                  noSplit = T)\n# arrowType\nclusterCornerAxes(object = tmp,reduction = 'umap',\n                  noSplit = T,arrowType = 'open')\n# facet by metadata column \"orig.ident\"\nclusterCornerAxes(object = tmp,\n                  reduction = 'umap',\n                  noSplit = F,\n                  groupFacet = 'orig.ident',\n                  aspect.ratio = 1,\n                  relLength = 0.5)\n# retain only one axes\nclusterCornerAxes(object = tmp,\n                  reduction = 'umap',\n                  noSplit = F,\n                  groupFacet = 'orig.ident',\n                  aspect.ratio = 1,\n                  relLength = 0.5,\n                  axes = 'one')\n# line color\nclusterCornerAxes(object = tmp,\n                  reduction = 'umap',\n                  noSplit = F,\n                  groupFacet = 'orig.ident',\n                  aspect.ratio = 1,\n                  relLength = 0.5,\n                  lineTextcol = 'grey50')\n# tsne\nclusterCornerAxes(object = tmp,\n                  reduction = 'tsne',\n                  noSplit = F,\n                  groupFacet = 'orig.ident',\n                  aspect.ratio = 1,\n                  relLength = 0.5)\nclusterCornerAxes(object = tmp,\n                  reduction = 'umap',\n                  noSplit = F,\n                  groupFacet = 'orig.ident',\n                  aspect.ratio = 1,\n                  relLength = 0.5,\n                  cornerTextSize = 2,\n                  themebg = 'bwCorner')\n# legend key size\nclusterCornerAxes(object = tmp,\n                  reduction = 'umap',\n                  clusterCol = 'cellType',\n                  noSplit = T,\n                  keySize = 8)\n# add cell type\nclusterCornerAxes(object = tmp,\n                  reduction = 'umap',\n                  clusterCol = \"cellType\",\n                  noSplit = T,\n                  cellLabel = T,\n                  cellLabelSize = 5)\n# remove legend\nclusterCornerAxes(object = tmp,\n                  reduction = 'umap',\n                  clusterCol = \"cellType\",\n                  noSplit = T,\n                  cellLabel = T,\n                  cellLabelSize = 5,\n                  show.legend = F)\n# split\nclusterCornerAxes(object = tmp,\n                  reduction = 'umap',\n                  clusterCol = \"cellType\",\n                  groupFacet = 'orig.ident',\n                  noSplit = F,\n                  cellLabel = T,\n                  cellLabelSize = 3,\n                  show.legend = F,\n                  aspect.ratio = 1,\n                  themebg = 'bwCorner')"},{"path":"clustercorneraxes.html","id":"add-circle","chapter":"3 clusterCornerAxes","heading":"3.3 add circle","text":"can add circles clusters mark:Relative parameters control circle follows:","code":"\n# add circle\nclusterCornerAxes(object = tmp,reduction = 'umap',\n                  noSplit = T,\n                  cornerTextSize = 3.5,\n                  themebg = 'bwCorner',\n                  addCircle = TRUE,\n                  cicAlpha = 0.2,\n                  nbin = 200)"},{"path":"featurecorneraxes.html","id":"featurecorneraxes","chapter":"4 FeatureCornerAxes","heading":"4 FeatureCornerAxes","text":"FeatureCornerAxes used add corner axis left-bottom UMAP/tSNE Featureplot function seurat plot view gene expressions.","code":""},{"path":"featurecorneraxes.html","id":"examples-1","chapter":"4 FeatureCornerAxes","heading":"4.1 examples","text":"See default plot:split plot group, can set groupFacet = NULL:Besides, can set color bar value range:","code":"\n# default\nFeatureCornerAxes(object = tmp,reduction = 'umap',\n                  groupFacet = 'orig.ident',\n                  relLength = 0.5,\n                  relDist = 0.2,\n                  features = c(\"Actb\",\"Ythdc1\", \"Ythdf2\"))\n# remove legend\nFeatureCornerAxes(object = tmp,reduction = 'umap',\n                  groupFacet = 'orig.ident',\n                  relLength = 0.5,\n                  relDist = 0.2,\n                  features = c(\"Actb\",\"Ythdc1\", \"Ythdf2\"),\n                  show.legend = F)\n# no facet group\nFeatureCornerAxes(object = tmp,reduction = 'umap',\n                  groupFacet = NULL,\n                  relLength = 0.5,\n                  relDist = 0.2,\n                  features = c(\"Actb\",\"Ythdc1\", \"Ythdf2\"),\n                  aspect.ratio = 1)\n# specify corner position\np1 <- FeatureCornerAxes(object = tmp,reduction = 'umap',\n                        groupFacet = 'orig.ident',\n                        relLength = 0.5,\n                        relDist = 0.2,\n                        aspect.ratio = 1,\n                        features = c(\"Actb\",\"Ythdc1\", \"Ythdf2\"),\n                        axes = 'one')\n\np2 <- FeatureCornerAxes(object = tmp,reduction = 'umap',\n                        groupFacet = 'orig.ident',\n                        relLength = 0.5,\n                        relDist = 0.2,\n                        aspect.ratio = 1,\n                        features = c(\"Actb\",\"Ythdc1\", \"Ythdf2\"),\n                        axes = 'one',\n                        cornerVariable = 'ST4')\n\n# combine\ncowplot::plot_grid(p1,p2,ncol = 2,align = 'hv')\n# given a range to plot\np1 <- FeatureCornerAxes(object = tmp,reduction = 'umap',\n                        groupFacet = NULL,\n                        relLength = 0.5,\n                        relDist = 0.2,\n                        features = c(\"Actb\",\"Ythdc1\", \"Ythdf2\"),\n                        aspect.ratio = 1,\n                        themebg = 'bwCorner')\n\np2 <- FeatureCornerAxes(object = tmp,reduction = 'umap',\n                        groupFacet = NULL,\n                        relLength = 0.5,\n                        relDist = 0.2,\n                        features = c(\"Actb\",\"Ythdc1\", \"Ythdf2\"),\n                        aspect.ratio = 1,\n                        themebg = 'bwCorner',\n                        minExp = 0,maxExp = 2)\n\n# combine\ncowplot::plot_grid(p1,p2,ncol = 1,align = 'hv')"},{"path":"averageheatmap.html","id":"averageheatmap","chapter":"5 AverageHeatmap","heading":"5 AverageHeatmap","text":"AverageHeatmap used plot averaged expression cross cluster cells.","code":""},{"path":"averageheatmap.html","id":"load-data","chapter":"5 AverageHeatmap","heading":"5.1 load data","text":"","code":"\nhttest <- system.file(\"extdata\", \"htdata.RDS\", package = \"scRNAtoolVis\")\npbmc <- readRDS(httest)\n\n# load markergene\nmarkergene <- system.file(\"extdata\", \"top5pbmc.markers.csv\", package = \"scRNAtoolVis\")\nmarkers <- read.table(markergene, sep = ',', header = TRUE)"},{"path":"averageheatmap.html","id":"examples-2","chapter":"5 AverageHeatmap","heading":"5.2 examples","text":"default plot:Supporting cluster colors annoCol = TRUE myanCol:Remove rownames:can change heatmap width height:","code":"\n# plot\nAverageHeatmap(object = pbmc,\n               markerGene = markers$gene)\n# change color\nAverageHeatmap(object = pbmc,\n               markerGene = markers$gene,\n               htCol = c(\"#339933\", \"#FFCC00\", \"#FF0033\"))\n# change annotation color\nlibrary(\"scales\") \nlibrary(ggsci)\n\nmycol <- hue_pal()(9)\nmycol1 <- pal_npg()(9)\n\n# plot\nAverageHeatmap(object = pbmc,\n               markerGene = markers$gene,\n               annoCol = TRUE,\n               myanCol = mycol) +\n  AverageHeatmap(object = pbmc,\n                 markerGene = markers$gene,\n                 annoCol = TRUE,\n                 myanCol = mycol1)\n# remove rownames\nAverageHeatmap(object = pbmc,\n               markerGene = markers$gene,\n               showRowNames = F)\n# remove cluster anno name\nAverageHeatmap(object = pbmc,\n               markerGene = markers$gene,\n               clusterAnnoName = F)\n# mark some genes\n# tartget gene\nannoGene <- c(\"LDHB\",\"CCR7\",\"LEF1\",\"NKG7\",\"CST7\",\n              \"GZMK\",\"HLA-DQA1\",\"HLA-DRB1\",\"HLA-DPA1\")\n\nAverageHeatmap(object = pbmc,\n               markerGene = markers$gene,\n               clusterAnnoName = F,\n               showRowNames = F,\n               markGenes = annoGene)\n# change heatmap width and height\nAverageHeatmap(object = pbmc,\n               markerGene = markers$gene,\n               clusterAnnoName = F,\n               width = 8,height = 16)"},{"path":"markervocalno.html","id":"markervocalno","chapter":"6 markerVocalno","heading":"6 markerVocalno","text":"markerVocalno used plot vocalno-plot marker genes.","code":""},{"path":"markervocalno.html","id":"examples-3","chapter":"6 markerVocalno","heading":"6.1 examples","text":"test <- system.file(“extdata”, “pbmc.markers.csv”, package = “scRNAtoolVis”)\nmarkers <- read.csv(test)","code":"\n# plot\nmarkerVocalno(markers = markers,\n              topn = 5,\n              labelCol = ggsci::pal_npg()(9))"},{"path":"jjdotplot.html","id":"jjdotplot","chapter":"7 jjDotPlot","heading":"7 jjDotPlot","text":"scRNAtoolVis supplies jjDotPlot function visualize gene expressions elegant way.","code":""},{"path":"jjdotplot.html","id":"load-test-data-1","chapter":"7 jjDotPlot","heading":"7.1 Load test data","text":"","code":"\nlibrary(scRNAtoolVis)\n\nhttest <- system.file(\"extdata\", \"htdata.RDS\", package = \"scRNAtoolVis\")\npbmc <- readRDS(httest)\n\n# add groups\npbmc$groups <- rep(c('stim','control'),each = 1319)\n# add celltype\npbmc$celltype <- Seurat::Idents(pbmc)\n\n# load markergene\ndata(\"top3pbmc.markers\")\n\n# check\nhead(top3pbmc.markers,3)\n# # A tibble: 3 x 7\n# # Groups:   cluster [1]\n#     vvp_val avg_log2FC pct.1 pct.2 p_val_adj cluster     gene\n#       <dbl>      <dbl> <dbl> <dbl>     <dbl> <fct>       <chr>\n# 1 1.74e-109       1.07 0.897 0.593 2.39e-105 Naive CD4 T LDHB\n# 2 1.17e- 83       1.33 0.435 0.108 1.60e- 79 Naive CD4 T CCR7\n# 3 3.28e- 49       1.05 0.333 0.103 4.50e- 45 Naive CD4 T LEF1"},{"path":"jjdotplot.html","id":"supply-with-genes","chapter":"7 jjDotPlot","heading":"7.2 Supply with genes","text":"can supply gene names visulaize gene expressions:can use celltype metadata mark celltypes:Add dendrogram genes using xtree:Rescale gene expressions given range:can change point shape:Add geom_tile instead geom_point:Rescale -2-2:","code":"\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene)\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          id = 'celltype')\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          xtree = T)\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          xtree = T,\n          rescale = T,\n          rescale.min = 0,\n          rescale.max = 1)\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          xtree = T,\n          rescale = T,\n          rescale.min = 0,\n          rescale.max = 1,\n          point.shape = 22)\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          xtree = T,\n          rescale = T,\n          rescale.min = 0,\n          rescale.max = 1,\n          point.geom = F,\n          tile.geom = T)\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          xtree = T,\n          rescale = T,\n          dot.col = c('blue','white','red'),\n          rescale.min = -2,\n          rescale.max = 2,\n          midpoint = 0)"},{"path":"jjdotplot.html","id":"supply-with-marker-gene","chapter":"7 jjDotPlot","heading":"7.3 Supply with marker gene","text":"can supply marker genes including gene celltype column information FindAllMarkers visulaize gene expressions:can also add dendrogram:Add celltype annotations gene:Showing using heatmap:Change tree position using tree.pos combine tree labels using .pos.label:","code":"\njjDotPlot(object = pbmc,\n          markerGene = top3pbmc.markers)\njjDotPlot(object = pbmc,\n          markerGene = top3pbmc.markers,\n          xtree = T)\njjDotPlot(object = pbmc,\n          markerGene = top3pbmc.markers,\n          anno = T,\n          plot.margin = c(3,1,1,1))\njjDotPlot(object = pbmc,\n          markerGene = top3pbmc.markers,\n          anno = T,\n          plot.margin = c(3,1,1,1),\n          point.geom = F,\n          tile.geom = T)\njjDotPlot(object = pbmc,\n          markerGene = top3pbmc.markers,\n          anno = T,\n          plot.margin = c(3,1,1,1),\n          tree.pos = 'left',\n          same.pos.label = T)"},{"path":"jjdotplot.html","id":"inherite-annosegment-args","chapter":"7 jjDotPlot","heading":"7.4 inherite annoSegment args","text":"can pass annoSegment parameters ajust annotations jjAnno pakcage:","code":"\njjDotPlot(object = pbmc,\n          markerGene = top3pbmc.markers,\n          anno = T,\n          plot.margin = c(3,1,1,1),\n          tree.pos = 'left',\n          same.pos.label = T,\n          yPosition = 10.3)"},{"path":"jjdotplot.html","id":"split-by-multiple-groups","chapter":"7 jjDotPlot","heading":"7.5 Split by multiple groups","text":"can also visualize genes across multiple groups using split.:Set split..aesGroup = T turn colors grouped groups:Add heatmap:","code":"\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          id = 'celltype',\n          split.by = 'groups',\n          dot.col = c('#0099CC','#CC3333'))jjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          id = 'celltype',\n          split.by = 'groups',\n          split.by.aesGroup = T)\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          id = 'celltype',\n          split.by = 'groups',\n          split.by.aesGroup = T,\n          point.geom = F,\n          tile.geom = T)"},{"path":"jjdotplot.html","id":"order","chapter":"7 jjDotPlot","heading":"7.6 Order","text":"Supply gene cluster orders plot:turn ytree change cluster orders:","code":"\n# change gene order\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          gene.order = rev(top3pbmc.markers$gene))\n# change cluster order\njjDotPlot(object = pbmc,\n          gene = top3pbmc.markers$gene,\n          gene.order = rev(top3pbmc.markers$gene),\n          cluster.order = 8:0,\n          ytree = F)"},{"path":"jjdotplot.html","id":"end","chapter":"7 jjDotPlot","heading":"7.7 End","text":"args see:","code":"\n?jjDotPlot"},{"path":"jjvolcano.html","id":"jjvolcano","chapter":"8 jjVolcano","heading":"8 jjVolcano","text":"jjVolcano function can used visualize marker genes multiple clusters.","code":""},{"path":"jjvolcano.html","id":"basic-examples","chapter":"8 jjVolcano","heading":"8.1 Basic examples","text":"Load test data:plot:Ajustlog2FC.cutoff,col.typeandtopGeneN:Supply genes:Change point color:Change rect fill color:gene text aruments can passed geom_text_repel:Ajust cluster orders cluster.order:","code":"\nlibrary(scRNAtoolVis)\n\n# test\ndata('pbmc.markers')\n\n# check\nhead(pbmc.markers,3)\n#               p_val avg_log2FC pct.1 pct.2     p_val_adj     cluster  gene\n# RPS12 2.008629e-140  0.7256738 1.000 0.991 2.754633e-136 Naive CD4 T RPS12\n# RPS27 2.624075e-140  0.7242847 0.999 0.992 3.598656e-136 Naive CD4 T RPS27\n# RPS6  1.280169e-138  0.6742630 1.000 0.995 1.755623e-134 Naive CD4 T  RPS6\n# plot\njjVolcano(diffData = pbmc.markers)\n# change aes color type\njjVolcano(diffData = pbmc.markers,\n          log2FC.cutoff = 0.5,\n          col.type = \"adjustP\",\n          topGeneN = 3)\n# supply own genes\nmygene <- c('LTB','CD79B','CCR7','GNLY')\n\njjVolcano(diffData = pbmc.markers,\n          myMarkers = mygene)\n# change point color\njjVolcano(diffData = pbmc.markers,\n          aesCol = c('purple','orange'))\n# change cluster rect color\njjVolcano(diffData = pbmc.markers,\n          tile.col = corrplot::COL2('RdBu', 15)[4:12])\n# cluster label arguments passed to geom_text_repel\njjVolcano(diffData = pbmc.markers,\n          tile.col = corrplot::COL2('RdBu', 15)[4:12],\n          size  = 3.5,\n          fontface = 'italic')\n# ajust cluster orders\njjVolcano(diffData = pbmc.markers,\n          tile.col = corrplot::COL2('PuOr', 15)[4:12],\n          size  = 3.5,\n          fontface = 'italic',\n          cluster.order = rev(unique(pbmc.markers$cluster)))"},{"path":"jjvolcano.html","id":"layout","chapter":"8 jjVolcano","heading":"8.2 Layout","text":"flip = T rotate plot:polar = T draw polar plot:Expand limits:","code":"\n# flip the plot\njjVolcano(diffData = pbmc.markers,\n          tile.col = corrplot::COL2('PiYG', 15)[4:12],\n          size  = 3.5,\n          fontface = 'italic',\n          legend.position = c(0.8,0.2),\n          flip = T)\n# make a polar plot\njjVolcano(diffData = pbmc.markers,\n          tile.col = corrplot::COL2('RdBu', 15)[4:12],\n          size  = 3.5,\n          fontface = 'italic',\n          polar = T)\n# expand limits\njjVolcano(diffData = pbmc.markers,\n          tile.col = corrplot::COL2('RdYlBu', 15)[4:12],\n          size  = 3.5,\n          fontface = 'italic',\n          polar = T) +\n  ylim(-8,10)"}]
